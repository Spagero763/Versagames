{
	"id": "791aa4ee880a4c1c84630f81aa9c9fc8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"versaGame.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract GameContract {\r\n    uint256 public gameFee;\r\n    mapping(address => bool) public hasPaidToPlay;\r\n    address public owner;\r\n\r\n    // Event to emit when a player pays to play\r\n    event PlayerRegistered(address indexed player, uint256 feePaid);\r\n\r\n    constructor(uint256 _gameFee) {\r\n        owner = msg.sender;\r\n        gameFee = _gameFee;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows a player to pay the fee and register for the game.\r\n     * @notice Emits `PlayerRegistered` on success.\r\n     */\r\n    function playGame() public payable {\r\n        require(msg.value == gameFee, \"Incorrect fee paid\");\r\n        hasPaidToPlay[msg.sender] = true;\r\n        emit PlayerRegistered(msg.sender, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws contract balance to the owner.\r\n     * @notice Only callable by the owner.\r\n     */\r\n    function withdraw() public {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the game fee (owner-only).\r\n     */\r\n    function setGameFee(uint256 _newFee) public {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        gameFee = _newFee;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"versaGame.sol": {
				"GameContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gameFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feePaid",
									"type": "uint256"
								}
							],
							"name": "PlayerRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "gameFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasPaidToPlay",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "playGame",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setGameFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"playGame()": {
								"details": "Allows a player to pay the fee and register for the game."
							},
							"setGameFee(uint256)": {
								"details": "Updates the game fee (owner-only)."
							},
							"withdraw()": {
								"details": "Withdraws contract balance to the owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"versaGame.sol\":61:1247  contract GameContract {... */\n  mstore(0x40, 0x80)\n    /* \"versaGame.sol\":321:417  constructor(uint256 _gameFee) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"versaGame.sol\":362:367  owner */\n  0x02\n    /* \"versaGame.sol\":362:380  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"versaGame.sol\":370:380  msg.sender */\n  caller\n    /* \"versaGame.sol\":362:380  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"versaGame.sol\":362:367  owner */\n  0x00\n    /* \"versaGame.sol\":391:409  gameFee = _gameFee */\n  sstore\n    /* \"versaGame.sol\":61:1247  contract GameContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"versaGame.sol\":61:1247  contract GameContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"versaGame.sol\":61:1247  contract GameContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9f3b6063\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa38bcc78\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xaf899735\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xea777eec\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"versaGame.sol\":894:1038  function withdraw() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"versaGame.sol\":171:191  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      sload(0x02)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"versaGame.sol\":171:191  address public owner */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"versaGame.sol\":119:164  mapping(address => bool) public hasPaidToPlay */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":678:692   */\n      swap1\n      iszero\n        /* \"#utility.yul\":671:693   */\n      iszero\n        /* \"#utility.yul\":653:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"versaGame.sol\":119:164  mapping(address => bool) public hasPaidToPlay */\n      tag_14\n        /* \"#utility.yul\":513:700   */\n      jump\n        /* \"versaGame.sol\":1112:1244  function setGameFee(uint256 _newFee) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_9\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n        /* \"versaGame.sol\":567:770  function playGame() public payable {... */\n    tag_6:\n      tag_9\n      tag_29\n      jump\t// in\n        /* \"versaGame.sol\":90:112  uint256 public gameFee */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      sload(0x00)\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1036:1061   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1024:1026   */\n      0x20\n        /* \"#utility.yul\":1009:1027   */\n      add\n        /* \"versaGame.sol\":90:112  uint256 public gameFee */\n      tag_14\n        /* \"#utility.yul\":890:1067   */\n      jump\n        /* \"versaGame.sol\":894:1038  function withdraw() public {... */\n    tag_10:\n        /* \"versaGame.sol\":954:959  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"versaGame.sol\":940:950  msg.sender */\n      caller\n        /* \"versaGame.sol\":940:959  msg.sender == owner */\n      eq\n        /* \"versaGame.sol\":932:973  require(msg.sender == owner, \"Not owner\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"versaGame.sol\":932:973  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1256:1277   */\n      mstore\n        /* \"#utility.yul\":1313:1314   */\n      0x09\n        /* \"#utility.yul\":1293:1311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1286:1315   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":1331:1349   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1324:1363   */\n      mstore\n        /* \"#utility.yul\":1380:1398   */\n      0x64\n      add\n        /* \"versaGame.sol\":932:973  require(msg.sender == owner, \"Not owner\") */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"versaGame.sol\":992:997  owner */\n      sload(0x02)\n        /* \"versaGame.sol\":984:1030  payable(owner).transfer(address(this).balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"versaGame.sol\":992:997  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"versaGame.sol\":1008:1029  address(this).balance */\n      selfbalance\n        /* \"versaGame.sol\":984:1030  payable(owner).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"versaGame.sol\":992:997  owner */\n      0x00\n        /* \"versaGame.sol\":984:1030  payable(owner).transfer(address(this).balance) */\n      dup2\n        /* \"versaGame.sol\":992:997  owner */\n      dup2\n        /* \"versaGame.sol\":984:1030  payable(owner).transfer(address(this).balance) */\n      dup2\n        /* \"versaGame.sol\":1008:1029  address(this).balance */\n      dup6\n        /* \"versaGame.sol\":992:997  owner */\n      dup9\n        /* \"versaGame.sol\":984:1030  payable(owner).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n        /* \"versaGame.sol\":894:1038  function withdraw() public {... */\n      jump\t// out\n        /* \"versaGame.sol\":1112:1244  function setGameFee(uint256 _newFee) public {... */\n    tag_27:\n        /* \"versaGame.sol\":1189:1194  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"versaGame.sol\":1175:1185  msg.sender */\n      caller\n        /* \"versaGame.sol\":1175:1194  msg.sender == owner */\n      eq\n        /* \"versaGame.sol\":1167:1208  require(msg.sender == owner, \"Not owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"versaGame.sol\":1167:1208  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1256:1277   */\n      mstore\n        /* \"#utility.yul\":1313:1314   */\n      0x09\n        /* \"#utility.yul\":1293:1311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1286:1315   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":1331:1349   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1324:1363   */\n      mstore\n        /* \"#utility.yul\":1380:1398   */\n      0x64\n      add\n        /* \"versaGame.sol\":1167:1208  require(msg.sender == owner, \"Not owner\") */\n      tag_37\n        /* \"#utility.yul\":1072:1404   */\n      jump\n        /* \"versaGame.sol\":1167:1208  require(msg.sender == owner, \"Not owner\") */\n    tag_42:\n        /* \"versaGame.sol\":1219:1226  gameFee */\n      0x00\n        /* \"versaGame.sol\":1219:1236  gameFee = _newFee */\n      sstore\n        /* \"versaGame.sol\":1112:1244  function setGameFee(uint256 _newFee) public {... */\n      jump\t// out\n        /* \"versaGame.sol\":567:770  function playGame() public payable {... */\n    tag_29:\n        /* \"versaGame.sol\":634:641  gameFee */\n      sload(0x00)\n        /* \"versaGame.sol\":621:630  msg.value */\n      callvalue\n        /* \"versaGame.sol\":621:641  msg.value == gameFee */\n      eq\n        /* \"versaGame.sol\":613:664  require(msg.value == gameFee, \"Incorrect fee paid\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1611:1613   */\n      0x20\n        /* \"versaGame.sol\":613:664  require(msg.value == gameFee, \"Incorrect fee paid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1593:1614   */\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x12\n        /* \"#utility.yul\":1630:1648   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1623:1653   */\n      mstore\n      shl(0x72, 0x125b98dbdc9c9958dd08199959481c185a59)\n        /* \"#utility.yul\":1669:1687   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1662:1710   */\n      mstore\n        /* \"#utility.yul\":1727:1745   */\n      0x64\n      add\n        /* \"versaGame.sol\":613:664  require(msg.value == gameFee, \"Incorrect fee paid\") */\n      tag_37\n        /* \"#utility.yul\":1409:1751   */\n      jump\n        /* \"versaGame.sol\":613:664  require(msg.value == gameFee, \"Incorrect fee paid\") */\n    tag_45:\n        /* \"versaGame.sol\":689:699  msg.sender */\n      caller\n        /* \"versaGame.sol\":675:700  hasPaidToPlay[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"versaGame.sol\":703:707  true */\n      0x01\n        /* \"versaGame.sol\":675:700  hasPaidToPlay[msg.sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"versaGame.sol\":675:707  hasPaidToPlay[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"versaGame.sol\":723:762  PlayerRegistered(msg.sender, msg.value) */\n      swap1\n      mload\n        /* \"versaGame.sol\":752:761  msg.value */\n      callvalue\n        /* \"#utility.yul\":1036:1061   */\n      dup2\n      mstore\n        /* \"versaGame.sol\":723:762  PlayerRegistered(msg.sender, msg.value) */\n      0x324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f\n      swap2\n        /* \"#utility.yul\":1009:1027   */\n      add\n        /* \"versaGame.sol\":723:762  PlayerRegistered(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"versaGame.sol\":567:770  function playGame() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_19:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_52:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_53:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":705:885   */\n    tag_26:\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x20\n        /* \"#utility.yul\":805:814   */\n      dup3\n        /* \"#utility.yul\":796:803   */\n      dup5\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_56:\n      pop\n        /* \"#utility.yul\":856:879   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":705:885   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063939afa5376ee1c1c3e50c8f22f0ea7482f7bf90304819eca66478f2d8d5d6164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 71,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:200:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161037938038061037983398101604081905261002e91610047565b600280546001600160a01b031916331790555f5561005e565b5f60208284031215610057575f80fd5b5051919050565b61030e8061006b5f395ff3fe608060405260043610610054575f3560e01c80633ccfd60b146100585780638da5cb5b1461006e5780639f3b6063146100aa578063a38bcc78146100e8578063af89973514610107578063ea777eec1461010f575b5f80fd5b348015610063575f80fd5b5061006c610131565b005b348015610079575f80fd5b5060025461008d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b5575f80fd5b506100d86100c4366004610294565b60016020525f908152604090205460ff1681565b60405190151581526020016100a1565b3480156100f3575f80fd5b5061006c6101023660046102c1565b6101b5565b61006c6101ff565b34801561011a575f80fd5b506101235f5481565b6040519081526020016100a1565b6002546001600160a01b0316331461017c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6002546040516001600160a01b03909116904780156108fc02915f818181858888f193505050501580156101b2573d5f803e3d5ffd5b50565b6002546001600160a01b031633146101fb5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610173565b5f55565b5f5434146102445760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08199959481c185a5960721b6044820152606401610173565b335f81815260016020818152604092839020805460ff191690921790915590513481527f324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f910160405180910390a2565b5f602082840312156102a4575f80fd5b81356001600160a01b03811681146102ba575f80fd5b9392505050565b5f602082840312156102d1575f80fd5b503591905056fea264697066735822122063939afa5376ee1c1c3e50c8f22f0ea7482f7bf90304819eca66478f2d8d5d6164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x379 CODESIZE SUB DUP1 PUSH2 0x379 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x47 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH0 SSTORE PUSH2 0x5E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E DUP1 PUSH2 0x6B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x9F3B6063 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xA38BCC78 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xEA777EEC EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x6C PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x173 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 SLOAD CALLVALUE EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B98DBDC9C9958DD08199959481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x173 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x324CB0062138D65997C86CD3012489CEB351D602F2F55C7408306E8040C79F3F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x939AFA53 PUSH23 0xEE1C1C3E50C8F22F0EA7482F7BF90304819ECA66478F2D DUP14 0x5D PUSH2 0x6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "61:1186:0:-:0;;;321:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;362:5;:18;;-1:-1:-1;;;;;;362:18:0;370:10;362:18;;;:5;391:18;61:1186;;14:184:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;:::-;61:1186:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@gameFee_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasPaidToPlay_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@playGame_57": {
									"entryPoint": 511,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setGameFee_101": {
									"entryPoint": 437,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_82": {
									"entryPoint": 305,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4236c0269742fc8e4b3f68703750c1a987a0df490774dc8cad713d93ce1732d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1753:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:1"
															},
															"nodeType": "YulIf",
															"src": "302:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:1"
															},
															"nodeType": "YulIf",
															"src": "408:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:1",
														"type": ""
													}
												],
												"src": "222:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "678:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "577:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "588:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "599:4:1",
														"type": ""
													}
												],
												"src": "513:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:1"
															},
															"nodeType": "YulIf",
															"src": "785:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "856:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "705:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1001:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1024:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1001:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1043:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1054:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1036:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "960:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "971:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "982:4:1",
														"type": ""
													}
												],
												"src": "890:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1286:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1346:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:18:1"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1351:11:1",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1324:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1372:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1395:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1372:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1223:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1237:4:1",
														"type": ""
													}
												],
												"src": "1072:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1673:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1669:18:1"
																	},
																	{
																		"hexValue": "496e636f7272656374206665652070616964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1689:20:1",
																		"type": "",
																		"value": "Incorrect fee paid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1662:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4236c0269742fc8e4b3f68703750c1a987a0df490774dc8cad713d93ce1732d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1560:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:1",
														"type": ""
													}
												],
												"src": "1409:342:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4236c0269742fc8e4b3f68703750c1a987a0df490774dc8cad713d93ce1732d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Incorrect fee paid\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610054575f3560e01c80633ccfd60b146100585780638da5cb5b1461006e5780639f3b6063146100aa578063a38bcc78146100e8578063af89973514610107578063ea777eec1461010f575b5f80fd5b348015610063575f80fd5b5061006c610131565b005b348015610079575f80fd5b5060025461008d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b5575f80fd5b506100d86100c4366004610294565b60016020525f908152604090205460ff1681565b60405190151581526020016100a1565b3480156100f3575f80fd5b5061006c6101023660046102c1565b6101b5565b61006c6101ff565b34801561011a575f80fd5b506101235f5481565b6040519081526020016100a1565b6002546001600160a01b0316331461017c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6002546040516001600160a01b03909116904780156108fc02915f818181858888f193505050501580156101b2573d5f803e3d5ffd5b50565b6002546001600160a01b031633146101fb5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610173565b5f55565b5f5434146102445760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08199959481c185a5960721b6044820152606401610173565b335f81815260016020818152604092839020805460ff191690921790915590513481527f324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f910160405180910390a2565b5f602082840312156102a4575f80fd5b81356001600160a01b03811681146102ba575f80fd5b9392505050565b5f602082840312156102d1575f80fd5b503591905056fea264697066735822122063939afa5376ee1c1c3e50c8f22f0ea7482f7bf90304819eca66478f2d8d5d6164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x9F3B6063 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xA38BCC78 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xAF899735 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xEA777EEC EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x131 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x6C PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x173 JUMP JUMPDEST PUSH0 SSTORE JUMP JUMPDEST PUSH0 SLOAD CALLVALUE EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B98DBDC9C9958DD08199959481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x173 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x324CB0062138D65997C86CD3012489CEB351D602F2F55C7408306E8040C79F3F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x939AFA53 PUSH23 0xEE1C1C3E50C8F22F0EA7482F7BF90304819ECA66478F2D DUP14 0x5D PUSH2 0x6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "61:1186:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:144;;;;;;;;;;;;;:::i;:::-;;171:20;;;;;;;;;;-1:-1:-1;171:20:0;;;;-1:-1:-1;;;;;171:20:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;171:20:0;;;;;;;;119:45;;;;;;;;;;-1:-1:-1;119:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;678:14:1;;671:22;653:41;;641:2;626:18;119:45:0;513:187:1;1112:132:0;;;;;;;;;;-1:-1:-1;1112:132:0;;;;;:::i;:::-;;:::i;567:203::-;;;:::i;90:22::-;;;;;;;;;;;;;;;;;;;1036:25:1;;;1024:2;1009:18;90:22:0;890:177:1;894:144:0;954:5;;-1:-1:-1;;;;;954:5:0;940:10;:19;932:41;;;;-1:-1:-1;;;932:41:0;;1274:2:1;932:41:0;;;1256:21:1;1313:1;1293:18;;;1286:29;-1:-1:-1;;;1331:18:1;;;1324:39;1380:18;;932:41:0;;;;;;;;;992:5;;984:46;;-1:-1:-1;;;;;992:5:0;;;;1008:21;984:46;;;;;992:5;984:46;992:5;984:46;1008:21;992:5;984:46;;;;;;;;;;;;;;;;;;;;;894:144::o;1112:132::-;1189:5;;-1:-1:-1;;;;;1189:5:0;1175:10;:19;1167:41;;;;-1:-1:-1;;;1167:41:0;;1274:2:1;1167:41:0;;;1256:21:1;1313:1;1293:18;;;1286:29;-1:-1:-1;;;1331:18:1;;;1324:39;1380:18;;1167:41:0;1072:332:1;1167:41:0;1219:7;:17;1112:132::o;567:203::-;634:7;;621:9;:20;613:51;;;;-1:-1:-1;;;613:51:0;;1611:2:1;613:51:0;;;1593:21:1;1650:2;1630:18;;;1623:30;-1:-1:-1;;;1669:18:1;;;1662:48;1727:18;;613:51:0;1409:342:1;613:51:0;689:10;675:25;;;;703:4;675:25;;;;;;;;;:32;;-1:-1:-1;;675:32:0;;;;;;;723:39;;752:9;1036:25:1;;723:39:0;;1009:18:1;723:39:0;;;;;;;567:203::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o;705:180::-;764:6;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;-1:-1:-1;856:23:1;;705:180;-1:-1:-1;705:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "156400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"gameFee()": "2381",
								"hasPaidToPlay(address)": "2515",
								"owner()": "2325",
								"playGame()": "28043",
								"setGameFee(uint256)": "24505",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 321,
									"end": 417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 321,
									"end": 417,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 321,
									"end": 417,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 362,
									"end": 380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 380,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 380,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 370,
									"end": 380,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 362,
									"end": 380,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 362,
									"end": 380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 380,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1247,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063939afa5376ee1c1c3e50c8f22f0ea7482f7bf90304819eca66478f2d8d5d6164736f6c63430008140033",
									".code": [
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "9F3B6063"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "A38BCC78"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "AF899735"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "EA777EEC"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 171,
											"end": 191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 171,
											"end": 191,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 191,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 678,
											"end": 692,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 653,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 119,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 513,
											"end": 700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1112,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1112,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 567,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 567,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 567,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 90,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 890,
											"end": 1067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 894,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 954,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 954,
											"end": 959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 954,
											"end": 959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 940,
											"end": 950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 932,
											"end": 973,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 992,
											"end": 997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 992,
											"end": 997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1029,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 1038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1112,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1194,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1072,
											"end": 1404,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 567,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 613,
											"end": 664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD08199959481C185A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 613,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1409,
											"end": 1751,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 613,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 613,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 689,
											"end": 699,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 675,
											"end": 707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 761,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "324CB0062138D65997C86CD3012489CEB351D602F2F55C7408306E8040C79F3F"
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 723,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 762,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 705,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 705,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 856,
											"end": 879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 705,
											"end": 885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 705,
											"end": 885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"versaGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"gameFee()": "ea777eec",
							"hasPaidToPlay(address)": "9f3b6063",
							"owner()": "8da5cb5b",
							"playGame()": "af899735",
							"setGameFee(uint256)": "a38bcc78",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"name\":\"PlayerRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gameFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPaidToPlay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setGameFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"playGame()\":{\"details\":\"Allows a player to pay the fee and register for the game.\"},\"setGameFee(uint256)\":{\"details\":\"Updates the game fee (owner-only).\"},\"withdraw()\":{\"details\":\"Withdraws contract balance to the owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"playGame()\":{\"notice\":\"Emits `PlayerRegistered` on success.\"},\"withdraw()\":{\"notice\":\"Only callable by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"versaGame.sol\":\"GameContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"versaGame.sol\":{\"keccak256\":\"0xc86f618e3e796a72dc05f5e4696a8e348daf3f24ad7097f3fa6c1df13bca324b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2749d4b977e3c44f4a73d491656574d99a15a082224948dc7f3c09b54d2d58ef\",\"dweb:/ipfs/QmYP4GkXDgAoRo6vhGLFqsYAgcNPxddJRUzJ6L9AqqNafy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "versaGame.sol:GameContract",
								"label": "gameFee",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "versaGame.sol:GameContract",
								"label": "hasPaidToPlay",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 9,
								"contract": "versaGame.sol:GameContract",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"playGame()": {
								"notice": "Emits `PlayerRegistered` on success."
							},
							"withdraw()": {
								"notice": "Only callable by the owner."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"versaGame.sol": {
				"ast": {
					"absolutePath": "versaGame.sol",
					"exportedSymbols": {
						"GameContract": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GameContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "GameContract",
							"nameLocation": "70:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ea777eec",
									"id": 3,
									"mutability": "mutable",
									"name": "gameFee",
									"nameLocation": "105:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "90:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "90:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f3b6063",
									"id": 7,
									"mutability": "mutable",
									"name": "hasPaidToPlay",
									"nameLocation": "151:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "119:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "127:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "119:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "138:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 9,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "186:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "171:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "171:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f",
									"id": 15,
									"name": "PlayerRegistered",
									"nameLocation": "255:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "288:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "272:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "feePaid",
												"nameLocation": "304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:41:0"
									},
									"src": "249:64:0"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "351:66:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "362:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "370:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "374:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "362:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "362:18:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "gameFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 26,
														"name": "_gameFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "401:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "391:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "391:18:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_gameFee",
												"nameLocation": "341:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "333:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:18:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:0"
									},
									"scope": 102,
									"src": "321:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "602:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 35,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "621:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "625:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "621:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 37,
																"name": "gameFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "634:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "621:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374206665652070616964",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "643:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4236c0269742fc8e4b3f68703750c1a987a0df490774dc8cad713d93ce1732d",
																"typeString": "literal_string \"Incorrect fee paid\""
															},
															"value": "Incorrect fee paid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4236c0269742fc8e4b3f68703750c1a987a0df490774dc8cad713d93ce1732d",
																"typeString": "literal_string \"Incorrect fee paid\""
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "613:51:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 42,
															"name": "hasPaidToPlay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "675:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 45,
														"indexExpression": {
															"expression": {
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "689:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "693:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "689:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "675:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "703:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "675:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "675:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "740:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "744:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "740:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 52,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "752:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "756:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "752:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 49,
														"name": "PlayerRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "723:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "EmitStatement",
												"src": "718:44:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "425:136:0",
										"text": " @dev Allows a player to pay the fee and register for the game.\n @notice Emits `PlayerRegistered` on success."
									},
									"functionSelector": "af899735",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playGame",
									"nameLocation": "576:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:0"
									},
									"scope": 102,
									"src": "567:203:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "921:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "940:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "944:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 64,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "940:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "932:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 76,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1016:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GameContract_$102",
																			"typeString": "contract GameContract"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GameContract_$102",
																			"typeString": "contract GameContract"
																		}
																	],
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1008:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 74,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1008:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1008:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1022:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1008:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 71,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "992:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "984:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 69,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "984:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "984:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "999:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "984:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "984:46:0"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "778:110:0",
										"text": " @dev Withdraws contract balance to the owner.\n @notice Only callable by the owner."
									},
									"functionSelector": "3ccfd60b",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "903:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:0"
									},
									"scope": 102,
									"src": "894:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1156:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 89,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1175:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1179:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 91,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1189:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1175:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1167:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1167:41:0"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "gameFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 97,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1229:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1219:17:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1046:60:0",
										"text": " @dev Updates the game fee (owner-only)."
									},
									"functionSelector": "a38bcc78",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setGameFee",
									"nameLocation": "1121:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "1140:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1132:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:17:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:0"
									},
									"scope": 102,
									"src": "1112:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 103,
							"src": "61:1186:0",
							"usedErrors": [],
							"usedEvents": [
								15
							]
						}
					],
					"src": "33:1214:0"
				},
				"id": 0
			}
		}
	}
}